/**
 * @param {ColorSpace} newSpace
 */
export function register(newSpace: ColorSpace): void;
export default spaces;
export type SpaceId = 'rgb' | 'xyz' | 'hsl' | 'hsv' | 'hsi' | 'hwb' | 'cmyk' | 'cmy' | 'xyy' | 'yiq' | 'yuv' | 'ydbdr' | 'ycgco' | 'ypbpr' | 'ycbcr' | 'xvycc' | 'yccbccrc' | 'ucs' | 'uvw' | 'jpeg' | 'lab' | 'labh' | 'lms' | 'lchab' | 'luv' | 'lchuv' | 'hsluv' | 'hpluv' | 'cubehelix' | 'coloroid' | 'hcg' | 'hcy' | 'tsl' | 'yes' | 'osaucs' | 'hsp';
export type Transform = (color: Array<number>, ...rest: Array<any>) => Array<number>;
export type ColorSpaceTransforms = {
    rgb: Transform;
    xyz: Transform;
    hsl: Transform;
    hsv: Transform;
    hsi: Transform;
    hwb: Transform;
    cmyk: Transform;
    cmy: Transform;
    xyy: Transform;
    yiq: Transform;
    yuv: Transform;
    ydbdr: Transform;
    ycgco: Transform;
    ypbpr: Transform;
    ycbcr: Transform;
    xvycc: Transform;
    yccbccrc: Transform;
    ucs: Transform;
    uvw: Transform;
    jpeg: Transform;
    lab: Transform;
    labh: Transform;
    lms: Transform;
    lchab: Transform;
    luv: Transform;
    lchuv: Transform;
    hsluv: Transform;
    hpluv: Transform;
    cubehelix: Transform;
    coloroid: Transform;
    hcg: Transform;
    hcy: Transform;
    tsl: Transform;
    yes: Transform;
    osaucs: Transform;
    hsp: Transform;
};
export type ColorSpaceBase = {
    name: SpaceId;
    min: Array<number>;
    max: Array<number>;
    channel: Array<string>;
    alias?: string[] | undefined;
};
export type ColorSpace = ColorSpaceBase & ColorSpaceTransforms;
declare namespace spaces {
    const rgb: ColorSpace;
    const xyz: ColorSpace;
    const hsl: ColorSpace;
    const hsv: ColorSpace;
    const hsi: ColorSpace;
    const hwb: ColorSpace;
    const cmyk: ColorSpace;
    const cmy: ColorSpace;
    const xyy: ColorSpace;
    const yiq: ColorSpace;
    const yuv: ColorSpace;
    const ydbdr: ColorSpace;
    const ycgco: ColorSpace;
    const ypbpr: ColorSpace;
    const ycbcr: ColorSpace;
    const xvycc: ColorSpace;
    const yccbccrc: ColorSpace;
    const ucs: ColorSpace;
    const uvw: ColorSpace;
    const jpeg: ColorSpace;
    const lab: ColorSpace;
    const labh: ColorSpace;
    const lms: ColorSpace;
    const lchab: ColorSpace;
    const luv: ColorSpace;
    const lchuv: ColorSpace;
    const hsluv: ColorSpace;
    const hpluv: ColorSpace;
    const cubehelix: ColorSpace;
    const coloroid: ColorSpace;
    const hcg: ColorSpace;
    const hcy: ColorSpace;
    const tsl: ColorSpace;
    const yes: ColorSpace;
    const osaucs: ColorSpace;
    const hsp: ColorSpace;
}
//# sourceMappingURL=index.d.ts.map