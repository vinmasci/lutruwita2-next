name: Deploy to Production

on:
  push:
    branches: [ main, surface-detection ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm install
          cd server && npm install && cd ..

      - name: Build
        run: |
          SKIP_TYPESCRIPT=true npm run build 2>&1 || { echo "Client build failed with:"; cat npm-debug.log; exit 1; }
          cd server && SKIP_TYPESCRIPT=true npm run build 2>&1 || { echo "Server build failed with:"; cat npm-debug.log; exit 1; } && cd ..

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          # Write key in OpenSSH format
          echo "-----BEGIN OPENSSH PRIVATE KEY-----" > ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_SSH_KEY }}" | tr -d '\r' >> ~/.ssh/id_rsa
          echo "-----END OPENSSH PRIVATE KEY-----" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Start agent
          eval $(ssh-agent -s)
          DISPLAY=":0.0" SSH_ASKPASS=/bin/false ssh-add ~/.ssh/id_rsa

      - name: Deploy to Server
        run: |
          # Test connection first
          ssh -v -o StrictHostKeyChecking=no root@170.64.223.56 'echo "SSH connection successful"' || exit 1
          # Then proceed with deployment
          ssh -v -o StrictHostKeyChecking=no root@170.64.223.56 '
            cd /var/www/lutruwita2
            git pull
            npm install
            SKIP_TYPESCRIPT=true npm run build
            cd server && npm install && SKIP_TYPESCRIPT=true npm run build && cd ..
            cp .env.production server/.env
            pm2 restart all
          '
