/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#ifndef __cplusplus
#error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
#endif

// Avoid multiple includes of rnmapbox_maps_specs symbols
#ifndef rnmapbox_maps_specs_H
#define rnmapbox_maps_specs_H

#import <Foundation/Foundation.h>
#import <RCTRequired/RCTRequired.h>
#import <RCTTypeSafety/RCTConvertHelpers.h>
#import <RCTTypeSafety/RCTTypedModuleConstants.h>
#import <React/RCTBridgeModule.h>
#import <React/RCTCxxConvert.h>
#import <React/RCTManagedPointer.h>
#import <ReactCommon/RCTTurboModule.h>
#import <optional>
#import <vector>


@protocol NativeMapViewModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)takeSnap:(NSNumber *)viewRef
     writeToDisk:(BOOL)writeToDisk
         resolve:(RCTPromiseResolveBlock)resolve
          reject:(RCTPromiseRejectBlock)reject;
- (void)queryTerrainElevation:(NSNumber *)viewRef
                  coordinates:(NSArray *)coordinates
                      resolve:(RCTPromiseResolveBlock)resolve
                       reject:(RCTPromiseRejectBlock)reject;
- (void)setSourceVisibility:(NSNumber *)viewRef
                    visible:(BOOL)visible
                   sourceId:(NSString *)sourceId
              sourceLayerId:(NSString *)sourceLayerId
                    resolve:(RCTPromiseResolveBlock)resolve
                     reject:(RCTPromiseRejectBlock)reject;
- (void)getCenter:(NSNumber *)viewRef
          resolve:(RCTPromiseResolveBlock)resolve
           reject:(RCTPromiseRejectBlock)reject;
- (void)getCoordinateFromView:(NSNumber *)viewRef
                      atPoint:(NSArray *)atPoint
                      resolve:(RCTPromiseResolveBlock)resolve
                       reject:(RCTPromiseRejectBlock)reject;
- (void)getPointInView:(NSNumber *)viewRef
          atCoordinate:(NSArray *)atCoordinate
               resolve:(RCTPromiseResolveBlock)resolve
                reject:(RCTPromiseRejectBlock)reject;
- (void)getZoom:(NSNumber *)viewRef
        resolve:(RCTPromiseResolveBlock)resolve
         reject:(RCTPromiseRejectBlock)reject;
- (void)getVisibleBounds:(NSNumber *)viewRef
                 resolve:(RCTPromiseResolveBlock)resolve
                  reject:(RCTPromiseRejectBlock)reject;
- (void)queryRenderedFeaturesAtPoint:(NSNumber *)viewRef
                             atPoint:(NSArray *)atPoint
                          withFilter:(NSArray *)withFilter
                        withLayerIDs:(NSArray *)withLayerIDs
                             resolve:(RCTPromiseResolveBlock)resolve
                              reject:(RCTPromiseRejectBlock)reject;
- (void)queryRenderedFeaturesInRect:(NSNumber *)viewRef
                           withBBox:(NSArray *)withBBox
                         withFilter:(NSArray *)withFilter
                       withLayerIDs:(NSArray *)withLayerIDs
                            resolve:(RCTPromiseResolveBlock)resolve
                             reject:(RCTPromiseRejectBlock)reject;
- (void)setHandledMapChangedEvents:(NSNumber *)viewRef
                            events:(NSArray *)events
                           resolve:(RCTPromiseResolveBlock)resolve
                            reject:(RCTPromiseRejectBlock)reject;
- (void)clearData:(NSNumber *)viewRef
          resolve:(RCTPromiseResolveBlock)resolve
           reject:(RCTPromiseRejectBlock)reject;
- (void)querySourceFeatures:(NSNumber *)viewRef
                   sourceId:(NSString *)sourceId
                 withFilter:(NSArray *)withFilter
         withSourceLayerIDs:(NSArray *)withSourceLayerIDs
                    resolve:(RCTPromiseResolveBlock)resolve
                     reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeMapViewModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeMapViewModule'
   */
  class JSI_EXPORT NativeMapViewModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeMapViewModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXCameraModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)updateCameraStop:(NSNumber *)viewRef
                    stop:(NSDictionary *)stop
                 resolve:(RCTPromiseResolveBlock)resolve
                  reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXCameraModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXCameraModule'
   */
  class JSI_EXPORT NativeRNMBXCameraModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXCameraModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)create:(NSInteger)tag
   coordinates:(NSArray *)coordinates
   startOffset:(double)startOffset
     endOffset:(double)endOffset
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;
- (void)setLineString:(NSInteger)tag
          coordinates:(NSArray *)coordinates
          startOffset:(double)startOffset
            endOffset:(double)endOffset
              resolve:(RCTPromiseResolveBlock)resolve
               reject:(RCTPromiseRejectBlock)reject;
- (void)setStartOffset:(NSInteger)tag
                offset:(double)offset
              duration:(double)duration
               resolve:(RCTPromiseResolveBlock)resolve
                reject:(RCTPromiseRejectBlock)reject;
- (void)setEndOffset:(NSInteger)tag
              offset:(double)offset
            duration:(double)duration
             resolve:(RCTPromiseResolveBlock)resolve
              reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXChangeLineOffsetsShapeAnimatorModule'
   */
  class JSI_EXPORT NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXImageModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)refresh:(NSNumber *)viewRef
        resolve:(RCTPromiseResolveBlock)resolve
         reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXImageModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXImageModule'
   */
  class JSI_EXPORT NativeRNMBXImageModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXImageModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXLocationModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)start:(double)minDisplacement;
- (void)stop;
- (void)setRequestsAlwaysUse:(BOOL)requestsAlwaysUse;
- (void)setMinDisplacement:(double)minDisplacement;
- (void)getLastKnownLocation:(RCTPromiseResolveBlock)resolve
                      reject:(RCTPromiseRejectBlock)reject;
- (void)simulateHeading:(double)changesPerSecond
              increment:(double)increment;
- (void)setLocationEventThrottle:(double)throttle;

@end

@interface NativeRNMBXLocationModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;

- (void)emitOnLocationUpdate:(NSDictionary *)value;
@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXLocationModule'
   */
  class JSI_EXPORT NativeRNMBXLocationModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXLocationModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXMovePointShapeAnimatorModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)create:(NSInteger)tag
    coordinate:(NSArray *)coordinate
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;
- (void)moveTo:(NSInteger)tag
    coordinate:(NSArray *)coordinate
      duration:(double)duration
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXMovePointShapeAnimatorModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXMovePointShapeAnimatorModule'
   */
  class JSI_EXPORT NativeRNMBXMovePointShapeAnimatorModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXMovePointShapeAnimatorModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXPointAnnotationModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)refresh:(NSNumber *)viewRef
        resolve:(RCTPromiseResolveBlock)resolve
         reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXPointAnnotationModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXPointAnnotationModule'
   */
  class JSI_EXPORT NativeRNMBXPointAnnotationModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXPointAnnotationModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXShapeSourceModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)getClusterExpansionZoom:(NSNumber *)viewRef
                    featureJSON:(NSString *)featureJSON
                        resolve:(RCTPromiseResolveBlock)resolve
                         reject:(RCTPromiseRejectBlock)reject;
- (void)getClusterLeaves:(NSNumber *)viewRef
             featureJSON:(NSString *)featureJSON
                  number:(NSInteger)number
                  offset:(NSInteger)offset
                 resolve:(RCTPromiseResolveBlock)resolve
                  reject:(RCTPromiseRejectBlock)reject;
- (void)getClusterChildren:(NSNumber *)viewRef
               featureJSON:(NSString *)featureJSON
                   resolve:(RCTPromiseResolveBlock)resolve
                    reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXShapeSourceModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXShapeSourceModule'
   */
  class JSI_EXPORT NativeRNMBXShapeSourceModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXShapeSourceModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXTileStoreModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)shared:(NSString *)path
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;
- (void)setOption:(NSInteger)tag
              key:(NSString *)key
           domain:(NSString *)domain
            value:(NSDictionary *)value
          resolve:(RCTPromiseResolveBlock)resolve
           reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXTileStoreModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXTileStoreModule'
   */
  class JSI_EXPORT NativeRNMBXTileStoreModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXTileStoreModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

@protocol NativeRNMBXViewportModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)getState:(NSNumber *)viewRef
         resolve:(RCTPromiseResolveBlock)resolve
          reject:(RCTPromiseRejectBlock)reject;
- (void)transitionTo:(NSNumber *)viewRef
               state:(NSDictionary *)state
          transition:(NSDictionary *)transition
             resolve:(RCTPromiseResolveBlock)resolve
              reject:(RCTPromiseRejectBlock)reject;
- (void)idle:(NSNumber *)viewRef
     resolve:(RCTPromiseResolveBlock)resolve
      reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeRNMBXViewportModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeRNMBXViewportModule'
   */
  class JSI_EXPORT NativeRNMBXViewportModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeRNMBXViewportModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react










#endif // rnmapbox_maps_specs_H
