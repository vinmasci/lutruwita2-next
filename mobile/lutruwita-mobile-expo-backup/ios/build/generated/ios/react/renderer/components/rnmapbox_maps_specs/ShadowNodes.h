
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateShadowNodeH.js
 */

#pragma once

#include <react/renderer/components/rnmapbox_maps_specs/EventEmitters.h>
#include <react/renderer/components/rnmapbox_maps_specs/Props.h>
#include <react/renderer/components/rnmapbox_maps_specs/States.h>
#include <react/renderer/components/view/ConcreteViewShadowNode.h>
#include <jsi/jsi.h>

namespace facebook::react {

JSI_EXPORT extern const char RNMBXAtmosphereComponentName[];

/*
 * `ShadowNode` for <RNMBXAtmosphere> component.
 */
using RNMBXAtmosphereShadowNode = ConcreteViewShadowNode<
    RNMBXAtmosphereComponentName,
    RNMBXAtmosphereProps,
    RNMBXAtmosphereEventEmitter,
    RNMBXAtmosphereState>;

JSI_EXPORT extern const char RNMBXBackgroundLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXBackgroundLayer> component.
 */
using RNMBXBackgroundLayerShadowNode = ConcreteViewShadowNode<
    RNMBXBackgroundLayerComponentName,
    RNMBXBackgroundLayerProps,
    RNMBXBackgroundLayerEventEmitter,
    RNMBXBackgroundLayerState>;

JSI_EXPORT extern const char RNMBXCalloutComponentName[];

/*
 * `ShadowNode` for <RNMBXCallout> component.
 */
using RNMBXCalloutShadowNode = ConcreteViewShadowNode<
    RNMBXCalloutComponentName,
    RNMBXCalloutProps,
    RNMBXCalloutEventEmitter,
    RNMBXCalloutState>;

JSI_EXPORT extern const char RNMBXCameraComponentName[];

/*
 * `ShadowNode` for <RNMBXCamera> component.
 */
using RNMBXCameraShadowNode = ConcreteViewShadowNode<
    RNMBXCameraComponentName,
    RNMBXCameraProps,
    RNMBXCameraEventEmitter,
    RNMBXCameraState>;

JSI_EXPORT extern const char RNMBXCircleLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXCircleLayer> component.
 */
using RNMBXCircleLayerShadowNode = ConcreteViewShadowNode<
    RNMBXCircleLayerComponentName,
    RNMBXCircleLayerProps,
    RNMBXCircleLayerEventEmitter,
    RNMBXCircleLayerState>;

JSI_EXPORT extern const char RNMBXCustomLocationProviderComponentName[];

/*
 * `ShadowNode` for <RNMBXCustomLocationProvider> component.
 */
using RNMBXCustomLocationProviderShadowNode = ConcreteViewShadowNode<
    RNMBXCustomLocationProviderComponentName,
    RNMBXCustomLocationProviderProps,
    RNMBXCustomLocationProviderEventEmitter,
    RNMBXCustomLocationProviderState>;

JSI_EXPORT extern const char RNMBXFillExtrusionLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXFillExtrusionLayer> component.
 */
using RNMBXFillExtrusionLayerShadowNode = ConcreteViewShadowNode<
    RNMBXFillExtrusionLayerComponentName,
    RNMBXFillExtrusionLayerProps,
    RNMBXFillExtrusionLayerEventEmitter,
    RNMBXFillExtrusionLayerState>;

JSI_EXPORT extern const char RNMBXFillLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXFillLayer> component.
 */
using RNMBXFillLayerShadowNode = ConcreteViewShadowNode<
    RNMBXFillLayerComponentName,
    RNMBXFillLayerProps,
    RNMBXFillLayerEventEmitter,
    RNMBXFillLayerState>;

JSI_EXPORT extern const char RNMBXHeatmapLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXHeatmapLayer> component.
 */
using RNMBXHeatmapLayerShadowNode = ConcreteViewShadowNode<
    RNMBXHeatmapLayerComponentName,
    RNMBXHeatmapLayerProps,
    RNMBXHeatmapLayerEventEmitter,
    RNMBXHeatmapLayerState>;

JSI_EXPORT extern const char RNMBXImageComponentName[];

/*
 * `ShadowNode` for <RNMBXImage> component.
 */
using RNMBXImageShadowNode = ConcreteViewShadowNode<
    RNMBXImageComponentName,
    RNMBXImageProps,
    RNMBXImageEventEmitter,
    RNMBXImageState>;

JSI_EXPORT extern const char RNMBXImagesComponentName[];

/*
 * `ShadowNode` for <RNMBXImages> component.
 */
using RNMBXImagesShadowNode = ConcreteViewShadowNode<
    RNMBXImagesComponentName,
    RNMBXImagesProps,
    RNMBXImagesEventEmitter,
    RNMBXImagesState>;

JSI_EXPORT extern const char RNMBXImageSourceComponentName[];

/*
 * `ShadowNode` for <RNMBXImageSource> component.
 */
using RNMBXImageSourceShadowNode = ConcreteViewShadowNode<
    RNMBXImageSourceComponentName,
    RNMBXImageSourceProps,
    RNMBXImageSourceEventEmitter,
    RNMBXImageSourceState>;

JSI_EXPORT extern const char RNMBXLightComponentName[];

/*
 * `ShadowNode` for <RNMBXLight> component.
 */
using RNMBXLightShadowNode = ConcreteViewShadowNode<
    RNMBXLightComponentName,
    RNMBXLightProps,
    RNMBXLightEventEmitter,
    RNMBXLightState>;

JSI_EXPORT extern const char RNMBXLineLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXLineLayer> component.
 */
using RNMBXLineLayerShadowNode = ConcreteViewShadowNode<
    RNMBXLineLayerComponentName,
    RNMBXLineLayerProps,
    RNMBXLineLayerEventEmitter,
    RNMBXLineLayerState>;

JSI_EXPORT extern const char RNMBXMapViewComponentName[];

/*
 * `ShadowNode` for <RNMBXMapView> component.
 */
using RNMBXMapViewShadowNode = ConcreteViewShadowNode<
    RNMBXMapViewComponentName,
    RNMBXMapViewProps,
    RNMBXMapViewEventEmitter,
    RNMBXMapViewState>;

JSI_EXPORT extern const char RNMBXMarkerViewContentComponentName[];

/*
 * `ShadowNode` for <RNMBXMarkerViewContent> component.
 */
using RNMBXMarkerViewContentShadowNode = ConcreteViewShadowNode<
    RNMBXMarkerViewContentComponentName,
    RNMBXMarkerViewContentProps,
    RNMBXMarkerViewContentEventEmitter,
    RNMBXMarkerViewContentState>;

JSI_EXPORT extern const char RNMBXMarkerViewComponentName[];

/*
 * `ShadowNode` for <RNMBXMarkerView> component.
 */
using RNMBXMarkerViewShadowNode = ConcreteViewShadowNode<
    RNMBXMarkerViewComponentName,
    RNMBXMarkerViewProps,
    RNMBXMarkerViewEventEmitter,
    RNMBXMarkerViewState>;

JSI_EXPORT extern const char RNMBXModelLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXModelLayer> component.
 */
using RNMBXModelLayerShadowNode = ConcreteViewShadowNode<
    RNMBXModelLayerComponentName,
    RNMBXModelLayerProps,
    RNMBXModelLayerEventEmitter,
    RNMBXModelLayerState>;

JSI_EXPORT extern const char RNMBXModelsComponentName[];

/*
 * `ShadowNode` for <RNMBXModels> component.
 */
using RNMBXModelsShadowNode = ConcreteViewShadowNode<
    RNMBXModelsComponentName,
    RNMBXModelsProps,
    RNMBXModelsEventEmitter,
    RNMBXModelsState>;

JSI_EXPORT extern const char RNMBXNativeUserLocationComponentName[];

/*
 * `ShadowNode` for <RNMBXNativeUserLocation> component.
 */
using RNMBXNativeUserLocationShadowNode = ConcreteViewShadowNode<
    RNMBXNativeUserLocationComponentName,
    RNMBXNativeUserLocationProps,
    RNMBXNativeUserLocationEventEmitter,
    RNMBXNativeUserLocationState>;

JSI_EXPORT extern const char RNMBXPointAnnotationComponentName[];

/*
 * `ShadowNode` for <RNMBXPointAnnotation> component.
 */
using RNMBXPointAnnotationShadowNode = ConcreteViewShadowNode<
    RNMBXPointAnnotationComponentName,
    RNMBXPointAnnotationProps,
    RNMBXPointAnnotationEventEmitter,
    RNMBXPointAnnotationState>;

JSI_EXPORT extern const char RNMBXRasterDemSourceComponentName[];

/*
 * `ShadowNode` for <RNMBXRasterDemSource> component.
 */
using RNMBXRasterDemSourceShadowNode = ConcreteViewShadowNode<
    RNMBXRasterDemSourceComponentName,
    RNMBXRasterDemSourceProps,
    RNMBXRasterDemSourceEventEmitter,
    RNMBXRasterDemSourceState>;

JSI_EXPORT extern const char RNMBXRasterLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXRasterLayer> component.
 */
using RNMBXRasterLayerShadowNode = ConcreteViewShadowNode<
    RNMBXRasterLayerComponentName,
    RNMBXRasterLayerProps,
    RNMBXRasterLayerEventEmitter,
    RNMBXRasterLayerState>;

JSI_EXPORT extern const char RNMBXRasterSourceComponentName[];

/*
 * `ShadowNode` for <RNMBXRasterSource> component.
 */
using RNMBXRasterSourceShadowNode = ConcreteViewShadowNode<
    RNMBXRasterSourceComponentName,
    RNMBXRasterSourceProps,
    RNMBXRasterSourceEventEmitter,
    RNMBXRasterSourceState>;

JSI_EXPORT extern const char RNMBXShapeSourceComponentName[];

/*
 * `ShadowNode` for <RNMBXShapeSource> component.
 */
using RNMBXShapeSourceShadowNode = ConcreteViewShadowNode<
    RNMBXShapeSourceComponentName,
    RNMBXShapeSourceProps,
    RNMBXShapeSourceEventEmitter,
    RNMBXShapeSourceState>;

JSI_EXPORT extern const char RNMBXSkyLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXSkyLayer> component.
 */
using RNMBXSkyLayerShadowNode = ConcreteViewShadowNode<
    RNMBXSkyLayerComponentName,
    RNMBXSkyLayerProps,
    RNMBXSkyLayerEventEmitter,
    RNMBXSkyLayerState>;

JSI_EXPORT extern const char RNMBXStyleImportComponentName[];

/*
 * `ShadowNode` for <RNMBXStyleImport> component.
 */
using RNMBXStyleImportShadowNode = ConcreteViewShadowNode<
    RNMBXStyleImportComponentName,
    RNMBXStyleImportProps,
    RNMBXStyleImportEventEmitter,
    RNMBXStyleImportState>;

JSI_EXPORT extern const char RNMBXSymbolLayerComponentName[];

/*
 * `ShadowNode` for <RNMBXSymbolLayer> component.
 */
using RNMBXSymbolLayerShadowNode = ConcreteViewShadowNode<
    RNMBXSymbolLayerComponentName,
    RNMBXSymbolLayerProps,
    RNMBXSymbolLayerEventEmitter,
    RNMBXSymbolLayerState>;

JSI_EXPORT extern const char RNMBXTerrainComponentName[];

/*
 * `ShadowNode` for <RNMBXTerrain> component.
 */
using RNMBXTerrainShadowNode = ConcreteViewShadowNode<
    RNMBXTerrainComponentName,
    RNMBXTerrainProps,
    RNMBXTerrainEventEmitter,
    RNMBXTerrainState>;

JSI_EXPORT extern const char RNMBXVectorSourceComponentName[];

/*
 * `ShadowNode` for <RNMBXVectorSource> component.
 */
using RNMBXVectorSourceShadowNode = ConcreteViewShadowNode<
    RNMBXVectorSourceComponentName,
    RNMBXVectorSourceProps,
    RNMBXVectorSourceEventEmitter,
    RNMBXVectorSourceState>;

JSI_EXPORT extern const char RNMBXViewportComponentName[];

/*
 * `ShadowNode` for <RNMBXViewport> component.
 */
using RNMBXViewportShadowNode = ConcreteViewShadowNode<
    RNMBXViewportComponentName,
    RNMBXViewportProps,
    RNMBXViewportEventEmitter,
    RNMBXViewportState>;

} // namespace facebook::react
